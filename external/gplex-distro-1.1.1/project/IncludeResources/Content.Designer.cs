//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUT.Gplex.IncludeResources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Content {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Content() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QUT.Gplex.IncludeResources.Content", typeof(Content).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     [Serializable]
        ///    public class BufferException : Exception
        ///    {
        ///        public BufferException() { }
        ///        public BufferException(string message) : base(message) { }
        ///        public BufferException(string message, Exception innerException)
        ///            : base(message, innerException) { }
        ///        protected BufferException(SerializationInfo info, StreamingContext context)
        ///            : base(info, context) { }
        ///    }
        ///
        ///    public abstract class ScanBuff
        ///    {
        ///        private string fileNm;
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GplexBuffers {
            get {
                return ResourceManager.GetString("GplexBuffers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ##
        ///## DO NOT EDIT THIS FILE CARELESSLY!
        ///## THE CONTENTS OF THIS FILE ARE STRONGLY LINKED TO THE
        ///## CODE OF Dfsa.cs AND TaskState.cs, AND ALL MUST VARY 
        ///## TOGETHER
        ///##
        /////
        ///// Experimental.frame
        ///// Version 1.0.3 of 20-November-2008
        ///## Derived from gplex.frame version of 2-September-2006.
        ///## Code page support for files without a BOM. 
        ///## Left and Right Anchored state support.
        ///## Start condition stack. Two generic params.
        ///## Using fixed length context handling for right anchors
        /////
        ///##--&gt;defines
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GplexxFrame {
            get {
                return ResourceManager.GetString("GplexxFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // ==============================================================
        ///// This code automatically produced from an embedded resource.
        ///// Do not edit this file, or it will become incompatible with 
        ///// the specification from which it was generated.
        ///// ==============================================================.
        /// </summary>
        internal static string ResourceHeader {
            get {
                return ResourceManager.GetString("ResourceHeader", resourceCulture);
            }
        }
    }
}
